version: "3.8"

services:
  # The Java build service that acts like it owns the place.
  template-java-17-spring-build:
    build:
      context: .. # Yes, we are reaching out of the current directory!
      dockerfile: .docker/Dockerfile.backend # The blueprint for your backend's life.
    container_name: template-java-17-spring-build # Naming it so it doesn't get lost in the container crowd.
    image: napalm23zero/template-java-17-spring-build # Custom image name, because default names are for the uninitiated.
    ports:
      - "8080:8080" # Exposing 8080 because we're open about our communication.
    volumes:
      - ${HOME}/.m2:/root/.m2 # Mapping to the user's .m2 directory. Docker's way of saying "make yourself at home".
      - ../:/workspace # Your entire project, containerized!
    env_file:
      - .env # Environment secrets, shhh!
    depends_on:
      template-oracle-db-build:
        condition: service_healthy # Dependency says: "No healthy DB, no app startup!"
    networks:
      - templates

  # Oracle DB service, it keeps the data, because Java forgets everything on every new thread.
  template-oracle-db-build:
    build:
      context: .. # Same context, different Dockerfile. Because diversity is key.
      dockerfile: .docker/Dockerfile.database # A different blueprint because our DB deserves it.
    container_name: template-oracle-db-build # This container is the bedrock of our data empire.
    ports:
      - "1521:1521" # You will find the data through this port. If you know what you're doing.
    restart: always # Like a phoenix, it rises from the ashes automatically.
    environment: # Use environment variables, because hardcoding is for maniacs!
      ORACLE_PASSWORD: ${ORACLE_PASSWORD}
      ORACLE_DATABASE: ${ORACLE_DATABASE}
      APP_USER: ${ORACLE_USER}
      APP_USER_PASSWORD: ${ORACLE_PASSWORD}
    volumes:
      - template-oracle-db-data:/opt/oracle/oradata # Persisting data because amnesia is bad for databases.
    env_file:
      - .env # More secrets, shhh!
    healthcheck: # Checking the DB's pulse to make sure it's alive and kicking.
      test:
        [
          "CMD-SHELL",
          "echo 'SELECT 1 FROM DUAL;' | sqlplus -S ${ORACLE_USER}/${ORACLE_PASSWORD}@//localhost:1521/${ORACLE_DATABASE}",
        ]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - templates

volumes:
  template-oracle-db-data:
    driver: local # Local storage for now, because it's just for fun.

networks:
  templates:
    driver: bridge # Bridging connections like social networks.
