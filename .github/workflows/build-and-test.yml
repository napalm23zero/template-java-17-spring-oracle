name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      oracle:
        image: gvenzl/oracle-xe:21.3.0-slim
        ports:
          - 1521:1521
        options: --health-cmd="exit 0" --health-interval=10s --health-timeout=5s --health-retries=5
        env:
          ORACLE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          ORACLE_CHARACTERSET: AL32UTF8

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk maven git curl python3 python3-pip

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Install dependencies
        run: mvn dependency:go-offline -B

      - name: Build with Maven
        run: mvn clean package

      - name: Run tests with coverage
        run: mvn test jacoco:report
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          HIBERNATE_DEFAULT_SCHEMA: ${{ secrets.HIBERNATE_DEFAULT_SCHEMA }}

      - name: Create jacoco2lcov conversion script
        run: |
          echo 'import xml.etree.ElementTree as ET' > jacoco2lcov.py
          echo 'import sys, os' >> jacoco2lcov.py
          echo 'os.makedirs(os.path.dirname(sys.argv[2]), exist_ok=True)' >> jacoco2lcov.py
          echo 'tree = ET.parse(sys.argv[1])' >> jacoco2lcov.py
          echo 'root = tree.getroot()' >> jacoco2lcov.py
          echo 'with open(sys.argv[2], "w") as f:' >> jacoco2lcov.py
          echo '    for package in root.findall("package"):' >> jacoco2lcov.py
          echo '        package_name = package.get("name").replace("/", ".")' >> jacoco2lcov.py
          echo '        for class_ in package.findall("class"):' >> jacoco2lcov.py
          echo '            class_name = class_.get("name").replace("/", ".")' >> jacoco2lcov.py
          echo '            for method in class_.findall("method"):' >> jacoco2lcov.py
          echo '                method_name = method.get("name")' >> jacoco2lcov.py
          echo '                for line in method.findall("counter"):' >> jacoco2lcov.py
          echo '                    if line.get("type") == "LINE":' >> jacoco2lcov.py
          echo '                        line_number = line.get("line")' >> jacoco2lcov.py
          echo '                        covered = line.get("covered")' >> jacoco2lcov.py
          echo '                        missed = line.get("missed")' >> jacoco2lcov.py
          echo '                        f.write("DA:{}\\t{}\\n".format(line_number, covered))' >> jacoco2lcov.py
          echo '    f.write("end_of_record\\n")' >> jacoco2lcov.py

      - name: Convert Jacoco XML to LCOV
        run: python3 jacoco2lcov.py target/site/jacoco/jacoco.xml target/jacoco-lcov/lcov.info

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: target/jacoco-lcov/lcov.info
